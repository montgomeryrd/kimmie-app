{"version":3,"sources":["assets/grocery.svg","assets/like.svg","assets/add.svg","assets/shopping-cart.svg","components/task-form/TaskForm.js","components/task-page/TaskPage.js","components/item-form/ItemForm.js","components/shopping-list/ShoppingList.js","components/dashboard/Dashboard.js","App.js","index.js"],"names":["module","exports","TaskForm","props","className","action","method","onSubmit","handleSubmitTasks","type","id","name","value","task","onChange","handleChangeTasks","required","autoComplete","placeholder","TaskPage","useState","show","setShow","toggle","today","Date","toLocaleString","weekday","toLowerCase","total","tasks","length","completedTasks","list","map","index","unselectable","key","style","opacity","includes","onClick","completeTask","window","location","reload","clearCompletedTasks","done","width","src","like","alt","ItemForm","handleSubmitItems","item","handleChangeItems","ShoppingList","items","completedItems","completeItem","clearCompletedItems","grocerys","Dashboard","e","setState","target","preventDefault","addTask","state","addItem","i","indexOf","splice","forEach","push","bind","to","textDecoration","add","shopping","path","render","React","Component","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,wOCqB5BC,EAnBE,SAACC,GACd,OACI,yBAAKC,UAAU,uBACX,0BAAMC,OAAO,aAAaC,OAAO,OAAOC,SAAUJ,EAAMK,mBACpD,2BACIC,KAAK,OACLC,GAAG,OACHC,KAAK,OACLC,MAAOT,EAAMU,KACbC,SAAUX,EAAMY,kBAChBC,UAAU,EACVC,aAAa,MACbC,YAAY,kBAEhB,4BAAQd,UAAU,SAASK,KAAK,SAASF,SAAUJ,EAAMK,mBAAzD,e,iBCwCDW,EApDE,SAAChB,GAAW,IAAD,EACAiB,oBAAS,GADT,mBACjBC,EADiB,KACXC,EADW,KAElBC,EAAS,kBAAMD,GAASD,IAExBG,GAAQ,IAAIC,MAAOC,eAAe,QAAS,CAAGC,QAAS,SAAUC,cACjEC,EAAQ1B,EAAM2B,MAAMC,OAAS5B,EAAM6B,eAAeD,OAElDE,EAAQ9B,EAAM2B,MAAuC3B,EAAM2B,MAAMC,OACnE5B,EAAM2B,MAAMI,KAAI,SAACrB,EAAMsB,GACnB,OACI,yBAAK/B,UAAU,OAAOgC,aAAa,KAAKC,IAAKF,GACzC,0BAAM/B,UAAU,gBAAgBkC,MAAO,CAACC,QAAUpC,EAAM6B,eAAeQ,SAAS3B,GAAQ,GAAK,GAAI4B,QAAS,WAAOtC,EAAMuC,aAAaP,KAC/HtB,EAAKA,UAMtB,8BAXwB8B,OAAOC,SAASC,QAAO,GAenD,OACI,yBAAKzC,UAAU,uBACX,wBAAIA,UAAU,SAASoB,EAAvB,aAAwCK,GACtCR,EACE,yBAAKjB,UAAU,YAAYgC,aAAa,MACpC,0BAAMhC,UAAU,WAAWqC,QAASlB,GAApC,iBAGJ,6BACI,0BAAMnB,UAAU,WAAWqC,QAASlB,GAApC,gBACA,kBAAC,EAAD,CACIV,KAAQV,EAAMU,KACdE,kBAAqBZ,EAAMY,kBAC3BP,kBAAqBL,EAAMK,qBAIvC,yBAAKJ,UAAU,kBACV6B,EACC9B,EAAM2B,MAAMC,OACV,4BAAQ3B,UAAU,YAAYqC,QAAStC,EAAM2C,qBAA7C,yBACF3C,EAAM4C,KACJ,yBAAK3C,UAAU,OAAO4C,MAAM,MAAMC,IAAKC,IAAMC,IAAI,cAEjD,uBAAG/C,UAAU,SAAb,iBC7BLgD,EAnBE,SAACjD,GACd,OACI,yBAAKC,UAAU,uBACX,0BAAMC,OAAO,aAAaC,OAAO,OAAOC,SAAUJ,EAAMkD,mBACpD,2BACI5C,KAAK,OACLC,GAAG,OACHC,KAAK,OACLC,MAAOT,EAAMmD,KACbxC,SAAUX,EAAMoD,kBAChBvC,UAAU,EACVC,aAAa,MACbC,YAAY,kBAEhB,4BAAQd,UAAU,SAASK,KAAK,SAASF,SAAUJ,EAAMkD,mBAAzD,e,iBCuCDG,EAnDM,SAACrD,GAAW,IAAD,EACJiB,oBAAS,GADL,mBACrBC,EADqB,KACfC,EADe,KAEtBC,EAAS,kBAAMD,GAASD,IAExBY,EAAQ9B,EAAMsD,MAAuCtD,EAAMsD,MAAM1B,OACnE5B,EAAMsD,MAAMvB,KAAI,SAACoB,EAAMnB,GACnB,OACI,yBAAK/B,UAAU,OAAOgC,aAAa,KAAKC,IAAKF,GACzC,0BAAM/B,UAAU,gBAAgBkC,MAAO,CAACC,QAAUpC,EAAMuD,eAAelB,SAASc,GAAQ,GAAK,GAAIb,QAAS,WAAOtC,EAAMwD,aAAaxB,KAC/HmB,EAAKA,UAMtB,8BAXwBX,OAAOC,SAASC,QAAO,GAenD,OACI,yBAAKzC,UAAU,uBACX,wBAAIA,UAAU,SAAd,uBACEiB,EACE,yBAAKjB,UAAU,YAAYgC,aAAa,MACpC,0BAAMhC,UAAU,WAAWqC,QAASlB,GAApC,iBAGJ,6BACI,0BAAMnB,UAAU,WAAWqC,QAASlB,GAApC,gBACA,kBAAC,EAAD,CACI+B,KAAQnD,EAAMmD,KACdC,kBAAqBpD,EAAMoD,kBAC3BF,kBAAqBlD,EAAMkD,qBAIvC,yBAAKjD,UAAU,kBACV6B,EACC9B,EAAMsD,MAAM1B,OACV,4BAAQ3B,UAAU,YAAYqC,QAAStC,EAAMyD,qBAA7C,yBAEA,yBAAKxD,UAAU,aACX,yBAAKA,UAAU,QAAQ4C,MAAM,MAAMC,IAAKY,IAAUV,IAAI,cACtD,yBAAK/C,UAAU,QAAQ4C,MAAM,MAAMC,IAAKY,IAAUV,IAAI,cACtD,yBAAK/C,UAAU,QAAQ4C,MAAM,MAAMC,IAAKY,IAAUV,IAAI,kB,kCCgF/DW,G,wDAvHX,WAAY3D,GAAO,IAAD,8BACd,cAAMA,IAgBVY,kBAAoB,SAACgD,GACjB,EAAKC,SAAS,CAACnD,KAAOkD,EAAEE,OAAOrD,SAlBjB,EAoBlBJ,kBAAoB,SAACuD,GACjBA,EAAEG,iBACF,EAAKC,QAAQ,EAAKC,OAClB,EAAKJ,SAAS,CAACnD,KAAO,MAvBR,EAyBlB0C,kBAAoB,SAACQ,GACjB,EAAKC,SAAS,CAACV,KAAOS,EAAEE,OAAOrD,SA1BjB,EA4BlByC,kBAAoB,SAACU,GACjBA,EAAEG,iBACF,EAAKG,QAAQ,EAAKD,OAClB,EAAKJ,SAAS,CAACV,KAAO,MA/BR,EAkClBa,QAAU,SAACtD,GACP,EAAKmD,SAAS,CAAClC,MAAK,sBAAO,EAAKsC,MAAMtC,OAAlB,CAAyBjB,OAnC/B,EAqClB6B,aAAe,SAACP,GACZ,GAAG,EAAKiC,MAAMpC,eAAeQ,SAAS,EAAK4B,MAAMtC,MAAMK,IAAS,CAC5D,IAAMmC,EAAI,EAAKF,MAAMpC,eAAeuC,QAAQ,EAAKH,MAAMtC,MAAMK,IACzDH,EAAiB,EAAKoC,MAAMpC,eAChCA,EAAewC,OAAOF,EAAG,GACzB,EAAKN,SAAS,CAAChC,eAAiBA,QAC7B,CACH,IAAIA,EAAc,sBAAO,EAAKoC,MAAMpC,gBAAlB,CAAkC,EAAKoC,MAAMtC,MAAMK,KACrE,EAAK6B,SAAS,CAAChC,eAAiBA,MA7CtB,EAgDlBc,oBAAsB,WAClB,IAAIhB,EAAQ,GACZ,EAAKsC,MAAMtC,MAAM2C,SAAQ,SAAA5D,GAAI,OAAK,EAAKuD,MAAMpC,eAAeQ,SAAS3B,GAA2BA,EAAnBiB,EAAM4C,KAAK7D,MACxF,EAAKmD,SAAS,CAAClC,MAAQA,IACvB,EAAKkC,SAAS,CAAChC,eAHkB,KAIjC,EAAKgC,SAAS,CAACjB,MAAO,KArDR,EAwDlBsB,QAAU,SAACf,GACP,EAAKU,SAAS,CAACP,MAAK,sBAAO,EAAKW,MAAMX,OAAlB,CAAyBH,OAzD/B,EA2DlBK,aAAe,SAACxB,GACZ,GAAG,EAAKiC,MAAMV,eAAelB,SAAS,EAAK4B,MAAMX,MAAMtB,IAAS,CAC5D,IAAMmC,EAAI,EAAKF,MAAMV,eAAea,QAAQ,EAAKH,MAAMX,MAAMtB,IACzDuB,EAAiB,EAAKU,MAAMV,eAChCA,EAAec,OAAOF,EAAG,GACzB,EAAKN,SAAS,CAACN,eAAiBA,QAC7B,CACH,IAAIA,EAAc,sBAAO,EAAKU,MAAMV,gBAAlB,CAAkC,EAAKU,MAAMX,MAAMtB,KACrE,EAAK6B,SAAS,CAACN,eAAiBA,MAnEtB,EAsElBE,oBAAsB,WAClB,IAAIH,EAAQ,GACZ,EAAKW,MAAMX,MAAMgB,SAAQ,SAAAnB,GAAI,OAAK,EAAKc,MAAMV,eAAelB,SAASc,GAA2BA,EAAnBG,EAAMiB,KAAKpB,MACxF,EAAKU,SAAS,CAACP,MAAQA,IACvB,EAAKO,SAAS,CAACN,eAHkB,MArEjC,EAAKU,MAAQ,CACTvD,KAAO,GACPyC,KAAO,GACPxB,MAAQ,GACR2B,MAAQ,GACRzB,eAAiB,GACjB0B,eAAiB,GACjBX,MAAO,GAEX,EAAKhC,kBAAkB,EAAKA,kBAAkB4D,KAAvB,gBACvB,EAAKnE,kBAAkB,EAAKA,kBAAkBmE,KAAvB,gBACvB,EAAKpB,kBAAkB,EAAKA,kBAAkBoB,KAAvB,gBACvB,EAAKtB,kBAAkB,EAAKA,kBAAkBsB,KAAvB,gBAdT,E,qDA6ER,IAAD,OAEL,OACI,yBAAKvE,UAAU,uBACX,kBAAC,IAAD,KACI,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAASwE,GAAG,SAAStC,MAAO,CAAEuC,eAAgB,SAC1C,yBAAK5B,IAAK6B,IAAK9B,MAAM,MAAMG,IAAI,eAEnC,kBAAC,IAAD,CAASyB,GAAG,YAAYtC,MAAO,CAAEuC,eAAiB,SAC9C,yBAAK5B,IAAK8B,IAAU/B,MAAM,MAAMG,IAAI,oBAG5C,kBAAC,IAAD,CAAO6B,KAAK,SAASC,OAAQ,SAAA9E,GAAK,OAC7B,kBAAC,EAAD,CACGU,KAAQ,EAAKuD,MAAMvD,KACnBiB,MAAS,EAAKsC,MAAMtC,MACpBE,eAAkB,EAAKoC,MAAMpC,eAC7Be,KAAQ,EAAKqB,MAAMrB,KACnBL,aAAgB,EAAKA,aACrBI,oBAAuB,EAAKA,oBAC5B/B,kBAAqB,EAAKA,kBAC1BP,kBAAqB,EAAKA,uBAGlC,kBAAC,IAAD,CAAOwE,KAAK,YAAYC,OAAQ,SAAA9E,GAAK,OAChC,kBAAC,EAAD,CACGmD,KAAQ,EAAKc,MAAMd,KACnBG,MAAS,EAAKW,MAAMX,MACpBC,eAAkB,EAAKU,MAAMV,eAC7BC,aAAgB,EAAKA,aACrBC,oBAAuB,EAAKA,oBAC5BL,kBAAqB,EAAKA,kBAC1BF,kBAAqB,EAAKA,wBAItC,yBAAKjD,UAAU,gB,GAnHP8E,IAAMC,YCGfC,MARf,WACE,OACE,yBAAKhF,UAAU,OACb,kBAAC,EAAD,QCDNiF,IAASJ,OACP,kBAAC,IAAMK,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ff7833d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/grocery.24a3f9f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.c2542a22.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.d315a363.svg\";","module.exports = __webpack_public_path__ + \"static/media/shopping-cart.e7b4603e.svg\";","import React from 'react';\r\n\r\nconst TaskForm = (props) => {\r\n    return (\r\n        <div className=\"task-form-container\">\r\n            <form action=\"/dashboard\" method=\"post\" onSubmit={props.handleSubmitTasks}>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"task\"\r\n                    name=\"task\"\r\n                    value={props.task}\r\n                    onChange={props.handleChangeTasks}\r\n                    required={true}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"input task...\"\r\n                />\r\n                <button className=\"submit\" type=\"submit\" onSubmit={props.handleSubmitTasks}>add task</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default TaskForm;","import React, { useState } from 'react';\r\nimport TaskForm from '../task-form/TaskForm';\r\nimport like from '../../assets/like.svg';\r\n\r\nconst TaskPage = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const toggle = () => setShow(!show);\r\n\r\n    const today = new Date().toLocaleString('en-us', {  weekday: 'long' }).toLowerCase();\r\n    const total = props.tasks.length - props.completedTasks.length;\r\n    \r\n    const list = !props.tasks ? window.location.reload(true) : props.tasks.length ? (\r\n        props.tasks.map((task, index) => {\r\n            return (\r\n                <div className=\"task\" unselectable=\"on\" key={index}>\r\n                    <span className=\"task-complete\" style={{opacity : props.completedTasks.includes(task) ? .2 : 1}} onClick={() => {props.completeTask(index)}}>\r\n                        {task.task}\r\n                    </span>\r\n                </div>\r\n            )\r\n        })\r\n    ) : ( \r\n        <div>\r\n\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"task-page-container\">\r\n            <h1 className=\"title\">{today}'s tasks: {total}</h1>\r\n            { show ?\r\n                <div className=\"task-view\" unselectable=\"on\">\r\n                    <span className=\"subtitle\" onClick={toggle}>...add tasks</span>\r\n                </div>\r\n            : \r\n                <div>\r\n                    <span className=\"subtitle\" onClick={toggle}>...hide form</span>\r\n                    <TaskForm\r\n                        task = {props.task}\r\n                        handleChangeTasks = {props.handleChangeTasks}\r\n                        handleSubmitTasks = {props.handleSubmitTasks}\r\n                    />\r\n                </div>\r\n            }\r\n            <div className=\"list-container\">\r\n                {list}\r\n                { props.tasks.length ?\r\n                    <button className=\"clear-btn\" onClick={props.clearCompletedTasks}>clear completed tasks</button>\r\n                : props.done ? \r\n                    <img className=\"like\" width=\"25%\" src={like} alt=\"thumbs up\"/> \r\n                : \r\n                    <p className=\"empty\">empty list</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TaskPage;","import React from 'react';\r\n\r\nconst ItemForm = (props) => {\r\n    return (\r\n        <div className=\"item-form-container\">\r\n            <form action=\"/dashboard\" method=\"post\" onSubmit={props.handleSubmitItems}>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"item\"\r\n                    name=\"item\"\r\n                    value={props.item}\r\n                    onChange={props.handleChangeItems}\r\n                    required={true}\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"input item...\"\r\n                />\r\n                <button className=\"submit\" type=\"submit\" onSubmit={props.handleSubmitItems}>add item</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default ItemForm;","import React, { useState } from 'react';\r\nimport ItemForm from '../item-form/ItemForm';\r\nimport grocerys from '../../assets/grocery.svg';\r\n\r\nconst ShoppingList = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const toggle = () => setShow(!show);\r\n\r\n    const list = !props.items ? window.location.reload(true) : props.items.length ? (\r\n        props.items.map((item, index) => {\r\n            return (\r\n                <div className=\"item\" unselectable=\"on\" key={index}>\r\n                    <span className=\"item-complete\" style={{opacity : props.completedItems.includes(item) ? .2 : 1}} onClick={() => {props.completeItem(index)}}>\r\n                        {item.item}\r\n                    </span>\r\n                </div>\r\n            )\r\n        })\r\n    ) : ( \r\n        <div>\r\n\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"item-page-container\">\r\n            <h1 className=\"title\">GROCERIES AND YEET!</h1>\r\n            { show ?\r\n                <div className=\"item-view\" unselectable=\"on\">\r\n                    <span className=\"subtitle\" onClick={toggle}>...add items</span>\r\n                </div>\r\n            : \r\n                <div>\r\n                    <span className=\"subtitle\" onClick={toggle}>...hide form</span>\r\n                    <ItemForm \r\n                        item = {props.item}\r\n                        handleChangeItems = {props.handleChangeItems}\r\n                        handleSubmitItems = {props.handleSubmitItems}\r\n                    />\r\n                </div>\r\n            }\r\n            <div className=\"list-container\">\r\n                {list}\r\n                { props.items.length ?\r\n                    <button className=\"clear-btn\" onClick={props.clearCompletedItems}>clear completed items</button>\r\n                :\r\n                    <div className=\"groceries\">\r\n                        <img className=\"empty\" width=\"25%\" src={grocerys} alt=\"groceries\"/>\r\n                        <img className=\"empty\" width=\"25%\" src={grocerys} alt=\"groceries\"/>\r\n                        <img className=\"empty\" width=\"25%\" src={grocerys} alt=\"groceries\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ShoppingList;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\r\nimport TaskPage from '../task-page/TaskPage';\r\nimport ShoppingList from '../shopping-list/ShoppingList';\r\nimport add from '../../assets/add.svg';\r\nimport shopping from '../../assets/shopping-cart.svg';\r\nimport '../../styles/styles.css';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            task : \"\",\r\n            item : \"\",\r\n            tasks : [],\r\n            items : [],\r\n            completedTasks : [],\r\n            completedItems : [],\r\n            done : false\r\n        }\r\n        this.handleChangeTasks=this.handleChangeTasks.bind(this);\r\n        this.handleSubmitTasks=this.handleSubmitTasks.bind(this);\r\n        this.handleChangeItems=this.handleChangeItems.bind(this);\r\n        this.handleSubmitItems=this.handleSubmitItems.bind(this);\r\n\r\n    }\r\n    handleChangeTasks = (e) => {\r\n        this.setState({task : e.target.value});\r\n    }\r\n    handleSubmitTasks = (e) => {\r\n        e.preventDefault();\r\n        this.addTask(this.state);\r\n        this.setState({task : \"\"});\r\n    }\r\n    handleChangeItems = (e) => {\r\n        this.setState({item : e.target.value});\r\n    }\r\n    handleSubmitItems = (e) => {\r\n        e.preventDefault();\r\n        this.addItem(this.state);\r\n        this.setState({item : \"\"});\r\n    }\r\n    // Task functions -----------------------\r\n    addTask = (task) =>{\r\n        this.setState({tasks : [...this.state.tasks, task]});\r\n    }\r\n    completeTask = (index) => {\r\n        if(this.state.completedTasks.includes(this.state.tasks[index])) {\r\n            const i = this.state.completedTasks.indexOf(this.state.tasks[index]);\r\n            let completedTasks = this.state.completedTasks;\r\n            completedTasks.splice(i, 1);\r\n            this.setState({completedTasks : completedTasks});\r\n        } else {\r\n            let completedTasks = [...this.state.completedTasks, this.state.tasks[index]];\r\n            this.setState({completedTasks : completedTasks});\r\n        }\r\n    }\r\n    clearCompletedTasks = () => {\r\n        let tasks = [], completedTasks = [];\r\n        this.state.tasks.forEach(task => !this.state.completedTasks.includes(task) ? tasks.push(task) : task);\r\n        this.setState({tasks : tasks});\r\n        this.setState({completedTasks : completedTasks});\r\n        this.setState({done : true});\r\n    }\r\n    // Item functions -----------------------\r\n    addItem = (item) => {\r\n        this.setState({items : [...this.state.items, item]});\r\n    }\r\n    completeItem = (index) => {\r\n        if(this.state.completedItems.includes(this.state.items[index])) {\r\n            const i = this.state.completedItems.indexOf(this.state.items[index]);\r\n            let completedItems = this.state.completedItems;\r\n            completedItems.splice(i, 1);\r\n            this.setState({completedItems : completedItems});\r\n        } else {\r\n            let completedItems = [...this.state.completedItems, this.state.items[index]];\r\n            this.setState({completedItems : completedItems});\r\n        }\r\n    }\r\n    clearCompletedItems = () => {\r\n        let items = [], completedItems = [];\r\n        this.state.items.forEach(item => !this.state.completedItems.includes(item) ? items.push(item) : item);\r\n        this.setState({items : items});\r\n        this.setState({completedItems : completedItems});\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"dashboard-container\">\r\n                <Router>\r\n                    <div className=\"top\">\r\n                        <NavLink to=\"/tasks\" style={{ textDecoration: 'none' }}>\r\n                            <img src={add} width=\"90%\" alt=\"task page\"/>\r\n                        </NavLink>\r\n                        <NavLink to=\"/shopping\" style={{ textDecoration : 'none' }}>\r\n                            <img src={shopping} width=\"90%\" alt=\"shopping page\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <Route path=\"/tasks\" render={props =>\r\n                        (<TaskPage \r\n                            task = {this.state.task}\r\n                            tasks = {this.state.tasks}\r\n                            completedTasks = {this.state.completedTasks}\r\n                            done = {this.state.done}\r\n                            completeTask = {this.completeTask}\r\n                            clearCompletedTasks = {this.clearCompletedTasks}\r\n                            handleChangeTasks = {this.handleChangeTasks}\r\n                            handleSubmitTasks = {this.handleSubmitTasks}\r\n                        />)\r\n                    }/>\r\n                    <Route path=\"/shopping\" render={props =>\r\n                        (<ShoppingList\r\n                            item = {this.state.item}\r\n                            items = {this.state.items}\r\n                            completedItems = {this.state.completedItems}\r\n                            completeItem = {this.completeItem}\r\n                            clearCompletedItems = {this.clearCompletedItems}\r\n                            handleChangeItems = {this.handleChangeItems}\r\n                            handleSubmitItems = {this.handleSubmitItems}\r\n                        />)\r\n                    }/>\r\n                </Router>\r\n                <div className=\"footer\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Dashboard;","import React from 'react';\nimport Dashboard from './components/dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}